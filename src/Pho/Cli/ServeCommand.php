<?php

/*
 * This file is part of the Pho package.
 *
 * (c) Emre Sokullu <emre@phonetworks.org>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Pho\Cli;

use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Output\OutputInterface;

use Symfony\Component\Process\Process;
use Symfony\Component\Process\Exception\ProcessFailedException;

class ServeCommand extends Command
{

    protected $server, $kernel, $founder, $config;

    protected function configure()
    {
        $this
            ->setName('serve')
            ->setDescription('Run server based on pho Graph ')
            ->addOption('password', null,  InputOption::VALUE_OPTIONAL, 'Port number of server.', '123456')
            ->addOption('port', null,  InputOption::VALUE_OPTIONAL, 'Port number of server.', 1377)
            ->addOption('host', null, InputOption::VALUE_OPTIONAL, 'Host of current server.', '127.0.0.1');
            //->addOption('database', null, InputOption::VALUE_OPTIONAL, 'Host and port for current database.', 'redis://127.0.0.1:6379')
            //->addOption('storage', null, InputOption::VALUE_OPTIONAL, 'Type of storage PhoGQL.', 'filesystem:// /tmp');

    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $this->config =array(
            "services"=>array(
                "database" => 'redis://127.0.0.1:6379',//$input->getOption('database'),
                "storage" => 'filesystem:// /tmp',//$input->getOption('storage')
            ),
            "default_objects"=>array(
                "graph" => class_exists(\PhoNetworksAutogenerated\Twitter::class) ? \PhoNetworksAutogenerated\Twitter::class : ( class_exists(\PhoNetworksAutogenerated\Facebook::class) ? \PhoNetworksAutogenerated\Facebook::class : \PhoNetworksAutogenerated\Graph::class ),
                "founder" => \PhoNetworksAutogenerated\User::class
            )
        );

        $this->kernel = new \Pho\Kernel\Kernel($this->config);
        $this->founder = new \PhoNetworksAutogenerated\User($this->kernel, $this->kernel->space(), $input->getOption('password'));
        $this->kernel->boot($this->founder);


        $this->server = new \Pho\Server\Rest\Daemon($this->kernel);
        $this->server->setPort(1337);
        //eval(\Psy\sh());
        $this->server->serve($input->getOption('port'), $input->getOption('host'));
    }
}
